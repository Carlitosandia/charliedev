{
    "titleprojects": "Proyectos",
    "Projects": [
        {
            "id": 1,
            "name": "IA Enfermedades",
            "type" : "project",
            "shortdescription": "Proyecto de Inteligencia Artificial que se encarga de realizar una predicción sobre qué enfermedad puede tener una persona en función de los síntomas que presenta y la intensidad de cada uno de ellos.",
            "description": [
                "Este es un proyecto de inteligencia artificial que se encarga de hacer una predicción sobre que enfermedad",
                "puede tener una persona dependiendo de los síntomas que presente y la intensidad de cada uno de ellos. Para desarrollar",
                "este módulo de diagnóstico de enfermedades se aplico Logica Difusa para poder hacer una predicción más precisa.",
                "El módulo incorpora un Dataset que contenia 10 enfermedades y 15 sintomas, cada sintoma tenia una intensidad de 1 a 10",
                "Para crear el Frontend se utilizo React, en este el usuario puede capturar los sintomas que presenta y la intensidad de estos mismos",
                "Una vez que el usuario haya capturado los sintomas, envia la información al Backend por medio de una API REST",
                "El backend esta desarrollado en Python utilizando Flask, en este se encuentra el modelo de Logica Difusa que se encarga de hacer la predicción",
                "Para poder hacer el calculo de la predicción, se utiliza un calculo de intersección de conjuntos difusos para poder determinar la enfermedad",
                "Ademas el resultado es evaluado mediante un umbral de confianza, si el resultado es mayor al umbral de confianza de devuelve como un resultado confiable, en caso de que no se devuelve como resultado no confiable",
                "El resultado es devuelto al Frontend y se muestra al usuario, el usuario vera una tabla con las enfermedades que puede tener y la probabilidad de que tenga cada una de ellas",
                "Ademas se muestra un boton para poder ver mas información sobre la enfermedad, al dar click en el boton se muestra una descripción de la enfermedad y los tratamientos que se pueden seguir."
            ],
            "image": "/images/projects/mainPageIa",
            "programminglanguages": [1, 4],
            "technologies": [1, 4, 6, 7, 8, 13, 14],
            "clouds":[],
            "frameworks": [1],
            "styles":[1],
            "databases": []
        },
        {
            "id": 2,
            "name": "Search Engine",
            "type" : "project",
            "shortdescription" : "Creación de un buscador que imita el funcionamiento de un buscador como Google, Yahoo! o Bing.",
            "description": [
                "Este proyecto es la creación de un motor de búsqueda, pero primero debemos hacernos las pregunta ¿Qué es un motor de búsqueda? Un motor de búsqueda es un sistema que tiene la capacidad de encontrar y recopilar información que se encuentra almacenada en un servidor, pero para poder hacer una búsqueda primero tiene que haber una palabra o un conjunto de palabras que alguna persona realice, a esta búsqueda le llamaremos Query. Hay diversos ejemplos de motores búsqueda, uno de los mas conocido y usados en todo el mundo es el motor de búsqueda de Google, este motor procesa más de 40,000 búsquedas cada segundo, unas 3.5 billones de búsquedas cada día y unas 1.2 trillones de búsquedas al año. Y esto solo del motor de búsqueda de Google, hay mas motores como el de Yahoo! y Bing que también reciben una gran cantidad de queries al día.",
                "Para este proyecto primero tuve que hacer un fichero con diferentes documentos, estos documentos iban a simular lo que seria las paginas y documentos que hay en la web, una vez creado el fichero y con los documentos usaremos la tecnología de Whoosh para procesar y normalizar los datos, con esto me refiero a que hará procesos como convertir todas las palabras a minúsculas, eliminar acentos y dividir el texto en palabras o términos, esto para posteriormente construir el diccionario, el índice invertido y la lista de publicaciones.",
                "El diccionario es una lista de todos los términos únicos encontrados en el corpus de documentos, por ejemplo si un documento del corpus contiene una frase como “Charlie Gallegos programador junior” en el diccionario seria {“Charlie”, “Gallegos”, “programador”, “junior”}.",
                "El índice invertido mapea términos a una lista de documentos y posiciones donde estos términos aparecen, este esta construido utilizando una estructura de datos como un mapa o diccionario donde cada termino apunta a su lista de publicaciones, por ejemplo, supongamos que tenemos los siguientes 3 documentos:",
                "Documento 1: \"el gato negro\"",
                "Documento 2: \"el perro blanco\"",
                "Documento 3: \"el gato y el perro\"",
                "El diccionario seria: {\"el\", \"gato\", \"negro\", \"perro\", \"blanco\", \"y\"}, y el índice invertido seria el siguiente:",
                "\"el\": [(1, 1), (2, 1), (3, 1)]",
                "\"gato\": [(1, 2), (3, 2)]",
                "\"negro\": [(1, 3)]",
                "\"perro\": [(2, 2), (3, 4)]",
                "\"blanco\": [(2, 3)]",
                "\"y\": [(3, 3)]",
                "Como se puede observar cada termino esta apuntando al documento y posición en el que se encuentra.",
                "La lista de publicaciones, como su nombre lo indica, es una lista en donde para cada término incluye información sobre todos los documentos que contienen el término y las posiciones dentro de esos documentos, tomando el ejemplo anterior:",
                "Para el término \"gato\"",
                "Posting List: [(1, 2), (3, 2)]",
                "Una vez creado estos 3 elementos debemos indexar los documentos que hemos creado anteriormente, Whoosh se encargara de crear estos 3 elementos con la información de los documentos que le proporcionamos, ya con esto pude empezar a codificar la funcion para poder hacer queries contra el índice. Las búsquedas podían ser por palabras clave o por frases completas, además de tener la capacidad de arrojar más de una búsqueda o query a la vez y que el motor de búsqueda pudiera arrojar los resultados de las búsquedas en un tiempo razonable. Además, en los resultados de las búsquedas tenía mostrar los resultados en un orden de relevancia, es decir, que los resultados que fueran más relevantes fueran mostrados primero. En los resultados se incluye el cálculo de las evaluaciones batch como el cálculo de la precision y recall."
            ],
            "image": "/images/projects/mainPageSearchEngine",
            "programminglanguages": [4],
            "technologies": [5],
            "clouds":[],
            "frameworks": [],
            "styles":[],
            "databases": []
        },
        {
            "id": 3,
            "name": "Socket Chat",
            "type" : "project",
            "shortdescription": "Creación de un servicio de mensajería instantánea, también conocido como chat, este es un servicio que permite que dos o más personas se comuniquen instantáneamente, manteniendo una conversación completa en tiempo real.",
            "description": [
                "Este proyecto es la creación de un servicio de mensaje instantánea, también conocido como chat, este es un servicio que permite comunicarse a dos o más personas de forma instantánea, manteniendo toda una conversación en tiempo real, un gran ejemplo de este tipo de servicio y que prácticamente todo el mundo utiliza es Whatsapp, esta aplicación es la aplicación de mensajeria mas usada en el mundo con más de 2 mil millones de usuarios, también existen otras aplicaciones que cuentan con este tipo de servicio como lo puede ser Facebook Messenger, Instagram, Snapchat, Telegram, etc…",
                "Para la creación de este proyecto tenemos que entender algunos conceptos que explicara de forma breve y también de una manera muy simplificada, únicamente para entender como es que funciona este proyecto.",
                "El primer concepto que debemos ver son los modelos de comunicación entre computadoras, hay dos arquitecturas muy conocidas, una de ellas es la arquitectura Peer-to-Peer (P2P).",
                "En esta arquitectura cada computadora en la red actúa tanto como cliente como servidor. Esto significa que cada nodo en la red (cada computadora) puede solicitar y proporcionar recursos y servicios a otros nodos sin necesidad de un servidor central.",
                "Esta arquitectura tiene sus pros y sus contras, pero esta no es la arquitectura que usaremos para este proyecto, se usara la arquitectura Cliente-Servidor.",
                "En esta arquitectura, como su nombre lo indica, tendremos un cliente y un servidor, el cliente será la computadora o dispositivo que solicita los recursos o servicios, en este caso solicitará el servicio de mandar un mensaje. El servidor será la computadora o dispositivo que proporcionará los recursos o servicios a los clientes, en este caso será el dispositivo que recibirá el mensaje del cliente y lo mandará a las otras computadoras.",
                "Ya conocemos la arquitectura, pero ahora tenemos que conocer como es que se logra esto, ya que solo hemos dicho que la computadora mandara un mensaje al servidor pero no he explicado como es que la computadora conoce a donde mandar el mensaje, ni como es que el servidor va a saber cuando un cliente mande un mensaje, tiene que haber una conexión entre ambos para poder conocer todo esto. Para explicar esta conexión o comunicación tenemos que conocer los siguientes conceptos:",
                "¿Qué es una dirección IP?",
                "Una dirección IP es una dirección única que identifica a un dispositivo en una red, puede ser en una red de área local (LAN) o en el Internet.",
                "¿Qué es un puerto?",
                "Un puerto es un numero asociado a una dirección IP que identifica a un proceso especifico o a un tipo de servicio en el dispositivo. Los puertos aseguran que los datos lleguen a la aplicación correcta de un dispositivo. Una computadora tiene muchísimos puertos van del 0 al 65535, demasiados puertos, aunque algunos de estos puertos están ocupados por algunos servicios que usamos, tal ves no lo sabias pero el puerto 80 de tu computadora esta destinado para las HTTP y el puerto 443 para las HTTPS, aplicaciones de transferencia de archivos como FileZilla usa el puerto 21. En términos muy simples, velo como un oído que esta escuchando siempre las peticiones.",
                "¿Qué es un Socket?",
                "Es una combinación de una dirección IP y un numero de puerto, este representa un extremo de una conexión de red. Estos sockets permiten la comunicación entre dos dispositivos en una red, en este caso el Socket del cliente incluirá la IP del cliente y el puerto que el cliente usa para la comunicación, y el Socket del servidor incluirá la IP del servidor y el puerto en el que el servidor escucha las solicitudes.",
                "¿Protocolos de comunicación?",
                "Existen protocolos de comunicación para transmitir datos a través de la red, dos de los mas utilizados son UDP y TCP, hay una gran diferencia entre ambos, para explicar esto pondré un ejemplo con dos personas. Imaginemos que Remy quiere conocer la hora y le va a preguntar a Mariana.",
                "Protocolo TCP",
                "Remy llega y le dice hola a Mariana esperando que Mariana le responda un “Hola”, Mariana escucha a Remy y le dice “Hola” a Remy, en este momento ya se presentaron y establecieron una conexión, entonces Remy le dice “¿me puedes dar la hora?” a Mariana y Mariana le responde “Son las 9 de la mañana”.",
                "Como podemos ver antes de pedirle lo que necesitaba, primero hubo una presentación para establecer una conexión y esperar el mensaje de confirmación. En el protocolo UDP es totalmente diferente.",
                "Protocolo UDP",
                "Remy llega y le dice a Mariana “¿me puedes dar la hora?” sin saber si Mariana recibió o no el mensaje, en este caso Mariana si escucho el mensaje y le responde a Remy “Son las 9 de la mañana” pero también puede darse el caso en donde Mariana no recibe el mensaje y simplemente se queda así.",
                "En el protocolo UDP no hay una presentación no se espera un mensaje de confirmación, por lo que se pueden estar enviando mensajes constantemente sin saber si se han recibido o no.",
                "A simple vista podemos decir que por que se usa el protocolo UDP si no tenemos la certeza de que se recibió el mensaje correctamente o no, pero cada protocolo tiene su función, por ejemplo, para servicios de Streaming no queremos saber si se han recibido todos los paquetes ya que, si esperamos por un mensaje de confirmación por cada paquete que enviamos, se tardaría demasiado en cargar, por lo que el protocolo UDP es el mejor para este caso.",
                "En nuestro caso el protocolo TCP es el ideal ya que, si necesitamos saber que los paquetes se hayan enviado correctamente, no podemos perder un mensaje de la nada, además de que es un servicio que si bien es instantáneo no es malo el esperar un par de segundos por un mensaje.",
                "Una vez conociendo todo esto ya se puede explicar este proyecto, primero tenemos que inicializar el servidor ya que a este van a llegar los mensajes que manden los clientes. El servidor esta ligado a una dirección IP especifica y a un puerto especifico y esta en un estado de listen, esperando a nuevas conexiones disponibles, la dirección IP y el puerto se muestran en una pantalla.",
                "Con el servidor en espera, tenemos que iniciar el cliente, al momento de iniciar el cliente se le solicitara al usuario la dirección IP y el puerto del servidor para crear un socket y conectarse al servidor.",
                "Una vez que el cliente da a conectar estable una conexión con el servidor con el socket, el servidor escucha esta petición de conectarse y lo acepta, el servidor guarda el socket que se acaba de conectar en una lista para agregarlo al chat.",
                "Hasta este momento ya tenemos la conexión entre los diferentes clientes y el servidor para crear lo que sería el chat, pero no hemos visto como es que se mandan los mensaje, solamente hemos creado la conexión pero no es tan sencillo como tan solo escribir “Hola” y que se pueda mandar así. En este proyecto hemos usado dos lenguajes de programación diferentes, Java y C#, por lo que tenemos que configurarlos para que ambos usen el mismo protocolo y formato de datos, en este caso configura que se leyeran por Bytes debido a que luego se tienen que mandar imágenes. Prácticamente el mensaje que escribía el usuario lo convertía en bytes y luego lo mandaba al servidor donde convertía los bytes en texto de nuevo, leía el mensaje y luego lo convertía de nuevo en bytes para mandarlo a todos los sockets en la lista que se creo anteriormente.",
                "Hasta este punto ya conocemos como establecimos la conexión y como se mandan los mensajes, ahora hablemos de la lista de integrantes en el chat, como podemos ver en la parte izquierda se despliega los nombre de usuario de cada uno de los integrantes del chat, esto se logra debido a que anteriormente se guardaron en una lista los sockets de cada uno de los integrantes que se unían al servidor y se asociaban con su nombre de usuario, de esta manera también se puede lograr lo que seria un direct message, o un mensaje directo, el usuario puede elegir a cualquier usuario en la lista y le puede mandar un mensaje privado solo a esa persona ya que en lugar de que el servidor mande el mensaje a todos los sockets de la lista, únicamente se manda al socket del usuario que se eligió.",
                "Por último hablaremos del envió de imágenes, usualmente pensamos en las imágenes como lo que son, solo imágenes, pero nos olvidamos del hecho de que estamos en una computadora y esta no la ve como una imagen, son bytes, mandamos los bytes de la imagen y el servidor los recibe de la misma manera que recibe texto."
            ],
            "image": "/images/projects/mainPageSocketChat",
            "programminglanguages": [2, 5],
            "technologies": [],
            "clouds":[],
            "frameworks": [],
            "styles":[],
            "databases": []
        },
        {
            "id": 4,
            "name": "Hackathon Pocket Lawyer",
            "type" : "project",
            "shortdescription" : "Creación de una plataforma que ayudara a los ciudadanos o profesionales que trabajan con las leyes, la forma de ayudar se eligió libremente, la única condición era que la plataforma fuera en el ámbito jurídico.",
            "description": [
                "Antes de explicar este proyecto debemos hacernos la siguiente pregunta ¿Qué es un Hackaton?",
                "Un hackaton es un evento donde varios programadores se reúnen en busca de resolver un reto o problema a través de un trabajo colaborativo y/o individual. Estos retos se tienen que resolver en un tiempo límite, la mayoría de los eventos tienen un tiempo limite de entre 24 y 48 horas, esto depende de la organización del evento. Lo que se busca en estos eventos es el encontrar las soluciones para el reto propuesto, cada uno de los equipos propondrá diferentes soluciones creativas, fomentando una competencia sana para compartir conocimientos y mejorar las habilidades como la del trabajo en equipo.",
                "La Facultad de Informática de la Universidad Autónoma de Querétaro, realizo un Hackaton el año 2023, en donde tuve la oportunidad de poder participar en este evento. La temática de ese año fue en el ámbito legal, el reto fue construir una plataforma que ayudara a los ciudadanos o a los profesionales que trabajan con leyes, el como ayudaba era de libre elección, la única condición era que la plataforma fuera del ámbito legal.",
                "Mi equipo y yo optamos por una plataforma que ayudara a los ciudadanos en estos temas debido a que muchas veces las personas no están bien informadas en estos temas debido a que no es fácil saberse de memoria todas las leyes que existen. Un ejemplo de esto son las leyes de tránsito, muchas veces manejamos algún vehículo sin conocimiento de todas las leyes y reglas que hay, por lo que hay veces en la que a las personas las detienen sin el conocimiento del por que fue que las detuvieron, y en esa problemática nos basamos para poder hacer una plataforma que ayudara a la ciudadanía en ese caso.",
                "La plataforma es una pagina web hecha con diferentes tecnología como HTML, SCSS, PHP y JavaScript y creada con un arquitectura MVC (Model View Controller), dentro de esta pagina encontraban diferentes cosas de entre ellas se pueden destacar dos importantes características como: “ChatBot de asesoramiento” y “Conexión entre personas y abogados”.",
                "El ChatBot de asesoramiento se trataba de una función en donde las personas podían entrar a este chat por asesoramiento legal en caso de que fueran detenidas, el chat tenía una base de datos con las leyes y el reglamento de transito para que la gente supiera por que estaban siendo detenidas y conocer que multa o proceso debían seguir por la infracción que habían realizado.",
                "La conexión entre personas y abogados era una función en donde las personas podían contactar con un abogado del tipo que necesitaban ya que hay diferentes tipos de abogados que se dedican a diferentes ramas de las leyes, la plataforma contaba con una base de datos en donde se tendrían los contactos de los abogados para que las personas pudieran contactarlos en caso de una asesoría legal o en caso de un siniestro en el que necesiten de un abogado de manera rápida.",
                "Para poder hacer la función de la conexión entre personas y abogados, las personas tenían que crear una cuenta en nuestra plataforma para obtener sus datos personales y de contacto, esto significa que la plataforma soportaba el manejo de usuarios, y con esto hago referencia a que la plataforma era capaz de hacer registros, inicios de sesiones con campos de autenticación como nombre de usuario/correo y una contraseña. Las contraseñas en la base de datos estaban hasheadas por lo que ninguna otra persona mas que el usuario tenia el conocimiento de la contraseña."
            ],
            "image": "/images/projects/mainPageHackathonPocketLawyer",
            "programminglanguages": [3, 1],
            "technologies": [4, 6, 7, 11, 13],
            "clouds":[],
            "frameworks": [],
            "styles":[2],
            "databases": [2]
        },
        {
            "id": 5,
            "name": "Let It Shine",
            "type" : "project",
            "shortdescription" : "Creación de una página web para un evento de concurso de talentos, la organización requería un método para dar a conocer el evento con el fin de conseguir más participantes y espectadores para el programa.",
            "description": [
                "En un evento de show de talentos, la organización requería de un método para difundir el evento para así obtener más participantes y espectadores para el show, y si bien hay herramientas como las redes sociales, así como Instagram, Facebook o Twitter, los organizadores del evento también necesitaban un método para poder llevar el control de los participantes del evento, como registrarlos y llevar un control de su información.",
                "Debido a las características del proyecto que la organización nos presentó, nos decidimos en la creación de una pagina web en la que los participantes tenían la opción de registrarse en la misma página, una vez registrados los participantes, la organización tenia acceso a un panel de administración donde se desplegaba la información de las personas que se habían registrado como talentos y que iban a participar, este panel de administración está protegido con una autenticación que solo se le dio una persona encargada de la organización de let it shine. Con este desarrollo se logro cumplir los objetivos que tenía la organización, la pagina web fue un éxito ya que se logro obtener mas registros de talentos de los esperados, además asistió una gran cantidad de espectadores, el foro del evento llego a un 90% de su total capacidad.",
                "Para la creación de este proyecto utilice diferentes tecnologías como HTML, SCSS, PHP y JavaScript y se construyó siguiendo la arquitectura MVC (Model View Controller). La aplicación cuenta con una base de datos que permite llevar el registro de los participantes y el control de la información de estos."
            ],
            "image": "/images/projects/mainPageLetItShine",
            "programminglanguages": [3, 1],
            "technologies": [4, 6, 7, 8, 11, 13],
            "clouds":[],
            "frameworks": [],
            "styles":[2],
            "databases": [5]
        },
        {
            "id": 6,
            "name": "Tienda Java",
            "type" : "project",
            "shortdescription" : "Creación de un sistema de almacenamiento, pero utilizando Notebooks para almacenar la información, es decir, no se podrían utilizar sistemas como MySQL, mongoDB, Oracle, PostgreSQL, etc.",
            "description": [
                "Este proyecto es la creación del sistema de una tienda, el proyecto tenia ciertos requisitos que se debían cumplir, pero solamente hablaré de uno en específico, este requisito era que no podía conectarse a un sistema de gestión de base de datos, en otras palabras, no se podía hacer uso de sistemas como MySQL, mongoDB, Oracle, PostgreSQL, etc… Esto complicaba las cosas ya que en una tienda se manejan bastantes datos, estamos hablando de datos como inventario de productos, reportes de ganancias, reportes de gastos, registro de proveedores y de clientes, y sabemos que cuando hablamos de registros no solamente es el registro, si no también es llevar un control de inicio de sesión con autenticación, debido a esto tuve que pensar en una manera de poder llevar todo esto y encontré una solución.",
                "Mi solución para este requisito fue llevar toda mi base de datos en diferentes bloc de notas, con esto me refiero a que prácticamente tenia la información de la tienda en diferentes txt, por ejemplo, en un txt nombrado Clientes.txt contenía la información que se le solicito al cliente al momento de su registro, esto incluía un nombre, una contraseña, una dirección, un numero, un ID y otros datos.",
                "Pero eso no resuelve mucho, si bien nos resuelve el problema de almacenar la información, no nos ayuda con el problema de cómo gestionarla, en un sistema de gestión de bases de datos como MySQL, la gestión es considerablemente fácil ya que únicamente se tienen que hacer consultas para recuperar, eliminar, agregar o modificar la información, pero en este caso tenemos que crear nuestros propios métodos para poder lograr hacer esta acciones, debido a esto la información que se almacena tiene que tener una cierta estructura para poder llevar un control de esta.",
                "Indagare un poco en esto de la estructura que la información, como recién comentaba, la información tiene que tener cierta estructura para que se pueda manipular de la manera correcta, Java tiene una función que permite la lectura de un archivo txt llamada FileReader y además tenemos una función, llamada Split, que permite separar texto tomando como base un carácter como identificador, conociendo esto podemos darnos una idea de cómo podemos organizar la estructura, la estructura de datos será organizada de la siguiente manera:",
                "nombre,contraseña,dirección,numero,id;",
                "Desglosemos esta estructura y entendámosla, como podemos ver cada dato es separado por una coma “,” esto permite que se puedan separar los datos para poder procesarlos y que no se combinen entre si, sin esto puede llegar a haber una datos equivocados o corruptos en donde el nombre y la dirección se mezclen y al final no se pueda saber dónde empieza uno y donde termina. Pero eso no arregla un gran problema y es el que no sabríamos en donde empieza un registro y donde termina uno, por ejemplo, supongamos que tenemos la misma estructura, pero con más datos, algo así:",
                "nombre,contraseña,dirección,numero,id, nombre,contraseña,dirección,numero,id, nombre,contraseña,dirección,numero,id, nombre,contraseña,dirección,numero,id, nombre,contraseña,dirección,numero,id, nombre,contraseña,dirección,numero,id,",
                "Como podemos ver a simple vista para nosotros podemos decir que se entiende y que podemos llevar la organización, pero el problema es que la computadora no lo vería de esa forma, tenemos que saber que la función Split lo que hace es separar el texto tomando como referencia la “,” y coloca el texto en un array, por ejemplo, si solo tuviéramos un registro se vería algo así una vez usada la función Split:",
                "[“nombre”,”contraseña”,”dirección”,”numero”,”id”]",
                "A simple vista podríamos decir que esta bien y que así podemos dividir los datos del archivo para conseguir cada dato por separado, pero como dije anteriormente el problema empieza cuando empieza a haber más registros, con varios registros se vería de la siguiente manera:",
                "[“nombre”,”contraseña”,”dirección”,”numero”, ”id”,“nombre”,”contraseña”,”dirección”,”numero”,”id”, “nombre”,”contraseña”,”dirección”,”numero”,”id”, “nombre”,”contraseña”,”dirección”,”numero”,”id”]",
                "Esto complica las cosas, como podemos ver si se separa cada dato pero el problema es que la computadora no sabría exactamente donde empieza un registro y donde termina uno, y siendo sinceros, nosotros tampoco podríamos distinguirlo. Para dar una mejor estructura para la lectura de estos datos se implementa otro carácter que nos ayudara a de nuevo aplicar la función Split para separar los registros, el carácter del que hablo es el punto y coma “;”, como podemos observar en la organización de los datos que mencione anteriormente, podemos observar que al final del registro se encuentra un punto y coma, que se encargara de marcar un punto de fin a un registro, por ejemplo supongamos que tenemos el mismo número de registro pero ahora con el formato que estamos usando para el proyecto:",
                "nombre,contraseña,dirección,numero,id, nombre,contraseña,dirección,numero,id; nombre,contraseña,dirección,numero,id; nombre,contraseña,dirección,numero,id, nombre,contraseña,dirección,numero,id;",
                "Ya vimos cómo nos quedaría el formato con el primer split a la coma, pero si ahora agregamos otra función Split pero ahora con el carácter “;” nos dará un resultado totalmente diferente. Se vería de la siguiente forma:",
                "[[“nombre”,”contraseña”,”dirección”,”numero”,”id”],[“nombre”,”contraseña”,”dirección”,”numero”,”id”,“nombre”,”contraseña”,”dirección”,”numero”,”id”],[“nombre”,”contraseña”,”dirección”,”numero”, “id”]]",
                "Como podemos ver ya se visualizan de una manera en la que se puedan separar los datos y registros, así es como podemos simular una base de datos sin hacer uso de un sistema gestor de base de datos. Cabe mencionar que había otras formas para poder hacer esto, como sabemos en el mundo de la programación hay diferentes soluciones para un solo problema, una de esas soluciones era simular una base de datos con JSON que es lo que prácticamente hacen las tecnologías NoSQL como MongoDB, pero se optó por esta solución ya que uno de los requisitos del proyecto también era hacer uso de los blocs de notas para poder hacer esto.",
                "Muy bien ahora ya sabemos como manejamos los datos en este proyecto empezare a hablar sobre qué es lo que hace este proyecto, como mencionamos antes es un sistema de tienda creada bajo el lenguaje de programación de Java, con una interfaz que hace que el usuario tenga una experiencia más agradable, por lo que al inicio del proyecto primero se selecciona quien es el que va a hacer uso de este sistema, tenemos una opción de clientes que son los que compran en nuestra tienda de abarrotería y tenemos la opción de proveedores que son los que nos venderían los productos.",
                "Una vez seleccionado esto se pedirá un inicio de sesión o un nuevo registro para conocer quien es la persona o empresa que esta la compra o venta, si es un inicio de sesión el sistema leerá el archivo donde se encuentra almacenada la información y hará un proceso donde primero buscara el numero de cliente o proveedor (dependiendo que opción se haya elegido en un inicio) y si este existe verificara que la contraseña coincida con la del numero de cliente que fue proporcionado, en el caso de registro hace el mismo proceso que comentamos anteriormente.",
                "Si el usuario ha iniciado sesión correctamente se ingresara al sistema en donde se podrán realizar las compras o ventas de los productos, al momento de seleccionar un producto se despliega el precio de este y también dependiendo de la cantidad seleccionada se va agregando al precio final, al agregar el producto a la canasta, se adjunta a una tabla en donde se despliega la cantidad, precio sin impuestos y los impuestos, en la parte baja se muestra el precio final de la canasta sin IVA y el IVA agregado, al momento de finalizar la compra se genera una factura de la compra o venta.",
                "Por último, todo este proceso genera diferentes reportes, como el reporte de clientes, reporte de ventas, reporte de proveedores, reporte de facturas, reporte de inventarios, reporte de ganancias y reporte de compras, todas estas las maneja el sistema y los genera cada que se hace alguna de las acciones del sistema. Los reportes se guardan de una manera similar que los registros de usuarios, y estos se pueden ver desde una sección del sistema cuando se clickea un botón se muestra un reporte que estos."
            ],
            "image": "/images/projects/mainPageJavaStore",
            "programminglanguages": [2],
            "technologies": [],
            "clouds":[],
            "frameworks": [],
            "styles":[],
            "databases": []
        },
        {
            "id": 7,
            "name": "Sistema Escolar",
            "type" : "project",
            "shortdescription" : "Desarrollo de una plataforma escolar con funciones para que los estudiantes vean horarios, registren materias, carguen tareas y verifiquen calificaciones. Los maestros pueden administrar tareas relacionadas con las materias, publicar y calificar tareas y registrar calificaciones finales. Incluye una sección de administración para administrar estudiantes y inscripción de docentes, materias, horarios y eventos.",
            "description": [
                "Este proyecto es la creación de una plataforma escolar, es un proyecto donde se planteó la siguiente problemática, una escuela necesitaba una pagina web para poder hacer publicidad a la misma, una página donde se muestran las carreras que se ofertan y sus datos de contacto. Adicional a esto debemos crear un sistema de gestión de alumnos y docentes, y cuando digo esto me refiero a que la plataforma debía tener diferentes funciones como un espacio donde los alumnos pueden ver su horario, dar de alta sus materias, subir sus trabajos de sus materias y revisar sus calificaciones, tanto de sus trabajos y de calificaciones finales. Los docentes también deben tener un espacio en donde puedan ver las materias que van a impartida, publicar los trabajos de su materia, calificar los trabajos y registrar calificaciones finales.",
                "Podemos observar que tanto los alumnos y los docentes tienen su espacio, pero debido a que esta es una escuela, no puede llegar cualquier persona y registrarse como un alumno y docente, además podemos ver que los docentes únicamente verán las materias que van a impartir pero ellos no tienen un opción para registrarlas, estos es debido a que también habrá una sección de administración que es el espacio en donde la administración de la escuela usaría para hacer diferentes funciones como registrar un nuevo alumno, registrar un nuevo docente, registrar los horarios de las materias, y además registrar un evento. Esto con el propósito de que únicamente la administración sea la encargada de llevar todo este control ya que en teoría en las escuelas solo ellos pueden llevar ese control.",
                "Con estos detalles ya podemos darnos una idea de todo lo que el sistema debe llegar a ser capaz, pero indagaremos un poco en ciertos aspectos ya que son importantes para también entender su funcionamiento, además en lo que resta de la explicación del proyecto veremos como es que la base de datos y las queries que se hacen a esta juegan un papel importante para poder hacer todo este sistema, ya que son consultas complejas y esta diseñada de una manera en la que pueda ser altamente escalable.",
                "Detalles en el portal de alumnos.",
                "Cuando un alumno quiere entrar al portal o sistema, debe iniciar sesión con los campos de su id y contraseña que la administración le debe proporcionar, al momento de iniciar su sesión, se mantendrá activa una sesión con la información de este estudiante para que el portal muestre únicamente la información de este alumno y no la de todos los alumnos o la de algún otro alumno, con esto el alumno al entrar a cualquiera de las secciones únicamente se mostrara su información, por ejemplo, en la sección de ver horarios, únicamente se mostrara el horario del alumno que inicio sesión y algo similar pasara en las otras secciones que explicare.",
                "En el portal de alumnos podemos notar que existe una opción de confirmar materias, pero no es tan sencillo como solo mostrar todas las materias que hay en la universidad ya que estaríamos dejando abierta la posibilidad que a lo mejor y un estudiante de la carrera de Ingeniería de software curse materias de la carrera de Licenciatura en informática y esto no debe ser valido, además también esta abierta la posibilidad de que un estudiante de primer semestre, curse una materia de noveno semestre, esto si bien podría estar bien en algunas ocasiones debería ser controlado por administración a través de una letra en donde el alumno consienta que quiera cursar esta materia, también esta abierta la posibilidad de que se registre en un horario que no concuerda con su grupo de la universidad, que si bien esto también puede ser posible, también debe ser tratado con la administración para saber si hay cupo en el horario de otro grupo.",
                "Entonces la solución a estos problemas es limitar las opciones que se le muestran al alumno, y esto es algo complicado ya que se tendría que hacer una consulta en la base de datos que filtre todos estos parámetros.",
                "También en el portal de alumnos tenemos una sección llamada virtual en donde el alumno puede subir sus trabajos de clase a sus respectivas materias, para esto tenemos que hacer una consulta en donde se muestren las materias que el alumno confirmo y además que nos devuelva los trabajos que el profesor ha subido a su materia. Si el profesor ha dejado un trabajo, el alumno tiene la posibilidad de subir su archivo, pero este archivo no se guardara en la base de datos como tal ya que si lo guardamos dentro de la base de datos esto implicaría que crezca rápidamente en tamaño y puede volverse lenta, debido a esto lo que hare será guardar el pdf dentro de una locación especifica dentro del servidor y la ruta de acceso la guardare en la base de datos, además le cambiare el nombre al archivo pdf a uno único para que no exista la probabilidad en la que se duplique el nombre y se corrompan los datos.",
                "Detalles en el portal de docentes.",
                "Como en el portal de alumnos, al momento de que el docente inicie su sesión con los datos que le otorgo la administración, se iniciara una sesión para que únicamente se muestren los datos del docente que inicio sesión.",
                "Al momento de que el profesor entre a la sección de ver materias, se hace una consulta para que se muestren las materias que el profesor impartirá, con su debido horario.",
                "Al momento de que el profesor quiera publicar un trabajo para su clase, podrá hacerlo desde la sección publicar trabajo, ahí seleccionara la clase a la cual quiere dejar un trabajo y una vez seleccionada, el profesor podrá subir un trabajo para su clase llenando un formulario con las características de este trabajo, al momento de subir este trabajo se guardara en la base de datos haciendo que los alumnos inscritos en su clase puedan visualizar este trabajo.",
                "Si el profesor publico un trabajo y decide que es momento de calificarlos, deberá entrara a la sección de calificar trabajos en donde seleccionará la clase cuyos trabajos quiere calificar, dentro de la sección se mostrara un panel con los nombres de sus alumnos y su trabajo anidado, podrá descargar su trabajo y verlos en su computadora, una vez revisados, en el panel también tendrá una opción en donde puede poner calificación a su trabajo y subirlo a la base de datos, de esta manera sus alumnos al momento de entrar a su portal podrán ver las calificaciones de sus trabajos.",
                "Por ultimo para registrar la calificación final del alumno, tendrá un proceso similar a la de calificar un trabajo, deberá entrar a la sección de registrar calificación y elegirá la clase que quiere registrar calificaciones, ahí se mostraran los alumnos de su clase y aun lado de cada alumno abra un apartado para poder registrar la calificación de cada uno, una vez puesta la calificación de los estudiantes se guardaran en las base de datos y los alumnos podrán entrar desde su portal para verlas.",
                "Detalles en el portal de administradores.",
                "En este portal se encontrarán las opciones de registrar alumnos, horarios, docentes, materias y eventos.",
                "Para registrar un alumno, se deberá ingresar a la sección de registrar un alumno en donde se llenará un formulario con los datos del alumno que van a registrar, se pedirán datos como el nombre, contraseña, correo, semestre, grupo y carrera. Al momento de registrarlos se guardará en la base de datos y ahora el alumno tendrá acceso a los servicios del portal. Para registrar un docente prácticamente será el mismo proceso, pero desde la sección de registrar un docente, pero con diferentes datos, pero de igual manera al momento de registrarlo, el docente podrá acceder a su portal.",
                "Para agregar una materia se ingresará a la sección de registrar una materia, y pedirá llenar un formulario con los campos de nombre de la materia y semestre en la que esta se imparte, al registrar la materia esta podrá usarse para poder registrar un horario. Para registrar el horario se debe ingresar a la sección de registrar horario y se pedirá llenar un formulario con los campos de clave/id de la materia, ID del docente que la va a impartir, ID del grupo, día de la semana y hora del día. Al registrar esto se podrán desplegar los horarios en los portales de los alumnos y profesores.",
                "Para finalizar tenemos una sección de registrar un evento, la función principal de esta sección es el que los eventos que hagan en la escuela se muestren en la pagina para que las personas puedan ver los eventos que hay.",
                "Para la creación de este proyecto utilice diferentes tecnologías como HTML, SCSS, PHP y JavaScript y se construyó siguiendo la arquitectura MVC (Model View Controller). La aplicación cuenta con una base de datos que permite llevar todos estos procesos que hemos mencionado anteriormente, esta construida de una manera que sea altamente escalable y que toda esta información trabaje en conjunto para lograr todas las funciones del proyecto."
            ],
            "image": "/images/projects/mainPageSchoolSystem",
            "programminglanguages": [3, 1],
            "technologies": [4, 6, 7, 13],
            "clouds":[],
            "frameworks": [],
            "styles":[2],
            "databases": [2]
        },
        {
            "id":8,
            "name": "NONE Carwash",
            "type" : "project",
            "shortdescription": "Desarrollo de un nuevo sitio web para una empresa de lavado de autos para reemplazar la plataforma existente, que carecía de información esencial y tenía un tráfico mínimo. El nuevo sitio incluye precios, ubicaciones, horarios de atención y otros detalles clave actualizados, lo que mejora la presencia y visibilidad en línea de la empresa.",
            "description": [
                "Este proyecto surge a partir de una problemática que enfrentaba un autolavado en el pasado. Si bien contaba con una página web, esta no incluía información relevante, lo que dificultaba que los clientes encontraran detalles esenciales como precios actualizados, ubicaciones, horarios de trabajo y otros datos importantes. Como consecuencia, la página web recibía pocas visitas mensualmente y carecía de una presencia sólida en internet.",
                "Al identificar estas deficiencias, propuse una solución integral y desarrollé una nueva página web desde cero para reemplazar la versión anterior. Esta nueva plataforma incorpora toda la información necesaria sobre el autolavado, facilitando que los clientes puedan acceder de manera rápida y sencilla a los detalles que buscan al investigar en línea. Durante el desarrollo, implementé prácticas de SEO (Optimización para Motores de Búsqueda) con el objetivo de mejorar el posicionamiento en Google. Gracias a esto, la página ha logrado incrementar sus visitas en un 150% por mes, mejorando significativamente la visibilidad y presencia digital del autolavado.",
                "Para garantizar que la información de precios y servicios permanezca actualizada, diseñé una sección de administrador. Esta funcionalidad permite a los responsables del autolavado ingresar al sistema y realizar actualizaciones, agregados o eliminaciones de servicios y productos de manera sencilla. Los administradores pueden modificar elementos clave como el precio, descripción, imagen o el nombre del servicio/producto. Esto es posible gracias a la integración de una base de datos, que se conecta dinámicamente con la página web para obtener y mostrar la información en tiempo real.",
                "El proyecto fue desarrollado utilizando tecnologías como HTML, SCSS, PHP y JavaScript, y se implementó siguiendo la arquitectura MVC (Model-View-Controller). Esta estructura garantiza un desarrollo escalable, eficiente y fácil de mantener. La solución implementada no solo resuelve los problemas previos, sino que también otorga a la empresa una herramienta robusta para gestionar su información de manera autónoma y optimizada."
            ],
            "image": "/images/projects/mainPageNone",
            "programminglanguages": [3, 1],
            "technologies": [4, 6, 7, 13],
            "clouds":[],
            "frameworks": [],
            "styles":[2],
            "databases": [2]
        },
        {
            "id":9,
            "name": "Pursued By Darkness",
            "type": "Project",
            "shortdescription": "Desarrollo de un videojuego de realidad virtual que sumerge al jugador en un ambiente virtual, generando una experiencia interactiva y envolvente. El proyecto utiliza tecnología de realidad virtual para engañar el sentido de la vista y crear una ilusión visual que hace que el usuario sienta que todo lo que sucede en el juego es real.",
            "description": [ 
                "Pursued By Darkness es un proyecto que se enmarca dentro de los sistemas inmersivos, un conjunto de tecnologías diseñadas para crear entornos simulados que permiten a los usuarios experimentar una interacción profunda y envolvente. Estos sistemas tienen como objetivo engañar los sentidos humanos, logrando una experiencia sensorial basada en características como la inmersión sensorial, la interactividad y el realismo.",
                "De entre los sentidos humanos, el sentido de la vista es el que más se ha logrado engañar gracias al uso de dispositivos como los lentes de realidad virtual y realidad aumentada, que proporcionan experiencias visuales altamente realistas.",
                "En este proyecto, mi equipo de trabajo y yo desarrollamos un videojuego de realidad virtual con el propósito de sumergir al jugador en un ambiente completamente virtual. Utilizamos esta tecnología para engañar el sentido de la vista y generar una experiencia interactiva que hace que el usuario sienta que todo lo que sucede en el juego ocurre en la vida real.",
                "El concepto del videojuego es simple pero efectivo: el jugador es perseguido por un monstruo en una habitación poco iluminada, donde debe completar diversas tareas para poder escapar. Esta dinámica provoca en el jugador una sensación de terror ante un peligro que, aunque irreal, se percibe como verdadero gracias a la ilusión visual generada por la tecnología. Este fenómeno puede verse en múltiples experimentos donde a individuos se les colocan lentes de realidad virtual y se simula una caída desde un edificio; sus reacciones, aunque el peligro es ficticio, son completamente reales.",
                "El desarrollo de este proyecto se llevó a cabo utilizando el motor Unreal Engine 5 y fue implementado con dispositivos Meta Quest 2, lo que nos permitió crear un entorno inmersivo, interactivo y visualmente impresionante que cumple con los estándares actuales de la realidad virtual."
            ],
            "image": "/images/projects/PursuedByDarkness",
            "programminglanguages": [6],
            "technologies": [6,7,9],
            "clouds":[],
            "frameworks": [],
            "styles":[],
            "databases": []
        }
    ]
}